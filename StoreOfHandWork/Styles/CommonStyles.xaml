<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Цвета -->
    <Color x:Key="PrimaryColorValue">#6B4CE6</Color>
    <Color x:Key="PrimaryDarkColorValue">#4B34A5</Color>
    <Color x:Key="AccentColorValue">#FF6B6B</Color>
    <Color x:Key="BackgroundColorValue">#F8F9FE</Color>
    <Color x:Key="SurfaceColorValue">#FFFFFF</Color>
    <Color x:Key="TextPrimaryColorValue">#2C3E50</Color>
    <Color x:Key="TextSecondaryColorValue">#95A5A6</Color>
    <Color x:Key="ErrorColorValue">#F44336</Color>
    <Color x:Key="BorderColorValue">#E0E0E0</Color>
    <Color x:Key="DividerColorValue">#BDBDBD</Color>

    <SolidColorBrush x:Key="PrimaryColor" Color="{StaticResource PrimaryColorValue}"/>
    <SolidColorBrush x:Key="PrimaryDarkColor" Color="{StaticResource PrimaryDarkColorValue}"/>
    <SolidColorBrush x:Key="AccentColor" Color="{StaticResource AccentColorValue}"/>
    <SolidColorBrush x:Key="BackgroundColor" Color="{StaticResource BackgroundColorValue}"/>
    <SolidColorBrush x:Key="SurfaceColor" Color="{StaticResource SurfaceColorValue}"/>
    <SolidColorBrush x:Key="TextPrimaryColor" Color="{StaticResource TextPrimaryColorValue}"/>
    <SolidColorBrush x:Key="TextSecondaryColor" Color="{StaticResource TextSecondaryColorValue}"/>
    <SolidColorBrush x:Key="ErrorColor" Color="{StaticResource ErrorColorValue}"/>
    <SolidColorBrush x:Key="BorderColor" Color="{StaticResource BorderColorValue}"/>
    <SolidColorBrush x:Key="DividerColor" Color="{StaticResource DividerColorValue}"/>

    <!-- Эффекты -->
    <DropShadowEffect x:Key="SoftShadowEffect" 
                      BlurRadius="10" 
                      ShadowDepth="2" 
                      Direction="270" 
                      Opacity="0.2" 
                      Color="#000000"/>

    <!-- Базовые стили -->
    <Style x:Key="BaseTextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <Grid>
                            <TextBlock x:Name="PART_Placeholder"
                                     Text="{TemplateBinding Tag}"
                                     Foreground="{StaticResource TextSecondaryColor}"
                                     Padding="{TemplateBinding Padding}"
                                     VerticalAlignment="Center"
                                     Visibility="Collapsed"/>
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Padding="{TemplateBinding Padding}"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Placeholder" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BasePasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextSecondaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"
                                    Padding="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Padding" Value="15,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition Width="10"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   Width="24" Height="24"/>
                            <ContentPresenter Grid.Column="2"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryDarkColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="BaseListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Background" Value="{StaticResource SurfaceColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryColor}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Применение базовых стилей -->
    <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextBoxStyle}"/>
    <Style TargetType="PasswordBox" BasedOn="{StaticResource BasePasswordBoxStyle}"/>
    <Style TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}"/>
    <Style TargetType="ListBox" BasedOn="{StaticResource BaseListBoxStyle}"/>
    <Style TargetType="ListBoxItem" BasedOn="{StaticResource BaseListBoxItemStyle}"/>

    <!-- Дополнительные стили кнопок -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}"/>
    
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#1F000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DangerIconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
    </Style>

</ResourceDictionary>
